<!--    
        Apttus Config & Pricing
        Cart
        Angular JS UI for CPQ 
        @2015-2016 Apttus Inc. All rights reserved.
 -->
<apex:page controller="Apttus_Config2.RemoteCPQController"
                        title="Cart" 
                        docType="html-5.0"
                        showHeader="false" 
                        sidebar="false"
                        standardStylesheets="false">

    <title>Apttus</title>
    <apex:stylesheet value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/assets/stylesheets/application.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/assets/stylesheets/assetStyles.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/assets/stylesheets/products.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/assets/stylesheets/collaboration-notify.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/assets/stylesheets/font-awesome.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/assets/stylesheets/select.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/assets/stylesheets/dynamicFieldStyles.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/assets/stylesheets/ui-grid.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/assets/stylesheets/costProfitabilityStyles.css')}"/>

    <apex:outputPanel rendered="{!NOT(ISNULL(CSSOverride))}">
        <apex:dynamicComponent componentValue="{!CSSOverrideComponent}"/>
    </apex:outputPanel>
        
    <!--External library dependencies-->
    <!-- Individually including libraries instead of single file -->
    <!-- <apex:includeScript value="{!URLFOR($Resource.ngCPQ, '/aptBase/lib/vendor.js')}"/> -->
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/lib/d3.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/lib/angular.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/lib/angular-ui-router.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/lib/angular-messages.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/lib/angular-sanitize.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/lib/ng-file-upload.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/lib/dirPagination.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/lib/angular-filter.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/lib/ng-lodash.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/lib/moment-with-locales.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/lib/pikaday.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/lib/pikaday-angular.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/lib/Sortable.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/lib/ng-sortable.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/lib/angular-ui-select.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/lib/ngprogress.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/lib/ui-grid.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/directives/apt-dropdown.js')}"/>

    <!--Main application setup/routes-->
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/aptBase.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/aptPrototypes.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/aptCPQData.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/aptCPQUI.js')}"/>
    <!--Controllers-->
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/controllers/catalogCtrl.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/controllers/paginationControlsCtrl.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/controllers/productListCtrl.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/controllers/favoriteListCtrl.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/controllers/assetsGridCtrl.js')}"/>
    <!--Services-->
    <!-- General -->
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/labelService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/cartService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/priceRampService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/massLineUpdateService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/categoryService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/favoriteConfigService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/filterSearchService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/configureService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/assetService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/multipleAdjustmentsService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/usagePriceTiersService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/appliedExpressionService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/searchLookupService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/collaborationService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/systemStateService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/costProfitabilityService.js')}"/>

    <!-- Object Constructors-->
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/lineItemModelService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/chargeLineModelService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/costLineModelService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/optionGroupModelService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/optionModelService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/adjustmentLineModelService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/services/usageTierModelService.js')}"/>
    
    <!-- Data Services-->
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/data/actionHandlerService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/data/assetDataService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/data/attributeDataService.js')}"/>   
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/data/cartDataService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/data/catalogDataService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/data/configurationDataService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/data/constraintRuleDataService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/data/fieldExpressionDataService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/data/incentiveDataService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/data/basePriceDataService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/data/pageErrorDataService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/data/displayActionDataService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/data/optionDataService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/data/productFilterDataService.js')}"/>
    <!-- Cache Services -->
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/cache/attributesCacheService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/cache/catalogCacheService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/cache/lineItemCacheService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/cache/optionsCacheService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/cache/fieldExpressionCacheService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/cache/assetsCacheService.js')}"/>
    <!-- Utility Services -->
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/services/actionQueueService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/services/i18nService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/services/utilService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/services/objectConstantsService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/filters/numberToCurrencyFilter.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/filters/currencyToNumberFilter.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/filters/numberToQuantityFilter.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/filters/quantityToNumberFilter.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/filters/numberToPercentFilter.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/filters/dateToStringFilter.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/filters/stringToDateFilter.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/filters/truncateTextFilter.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/services/queueWrapperService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptBase/services/remoteService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/lineItemSupportService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/formulaEvaluatorService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/cartFormulaService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/formulaIteratorService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/attributeRulesService.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQData/services/attributeMatrixService.js')}"/>
    <!--Directives-->
    <!--Common Directives-->
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/displayActionsDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/dynamicFieldDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/numericExpressionLockDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/fixedHeaderDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/globalHeaderDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/constraintMessagesDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/constraintDialogDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/incentiveDialogDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/basePriceDialogDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/productSummaryDialogDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/priceRampDialogDirective.js')}"/>    
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/massLineUpdateDialogDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/proposalSummaryDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/customActionDialogDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/toggleAllClassDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/toggleClassDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/PageErrorMessagesDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/loadingIndicatorDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/recursiveDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/multipleAdjustmentsDialogDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/usagePriceTiersDialogDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/searchLookupDialogDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/miscItemDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/affectedProductsDialogDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/collaborationDialogDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/cartLabelFieldDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/common/saveAsFavoriteDialogDirective.js')}"/>
        
    <!-- Catalog-->
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/catalog/breadCrumbDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/catalog/categoryBrowserDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/catalog/categorySelectorDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/catalog/filterSearchDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/catalog/catalogProductDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/catalog/catalogFavoriteDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/catalog/refineSearchDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/catalog/searchProductDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/catalog/compareProductsDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/catalog/catalogLocationsDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/catalog/favoriteSummaryDialogDirective.js')}"/>
    
    <!-- Configure -->  
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/config/checkboxOptionDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/config/checkboxOptionListDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/config/configurationSummaryDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/config/configureProductAttributesDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/config/configureProductHeaderDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/config/configureProductNavDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/config/configureProductOptionsDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/config/configureProductBreadcrumbDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/config/mainConfigureProductDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/config/attributeGroupDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/config/attributeGroupsDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/config/optionGroupDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/config/optionGroupsDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/config/picklistOptionListDirective.js')}"/>
    <!-- Cart-->
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/cart/cartEditableActionDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/cart/cartHeaderDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/cart/groupByCartHeaderDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/cart/groupByCartDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/cart/cartLabelTotalsRowDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/cart/cartTotalsDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/cart/totalItemWatcherDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/cart/mainCartDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/cart/miniCartDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/cart/recommendedProductsDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/cart/collaborationNotificationDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/cart/incentiveTooltipDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/cart/pricingGuidanceDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/cart/pricingGuidanceFlyoutDirective.js')}"/>

   <!-- Cost Profitability -->
   <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/costing/costProfitabilityDirective.js')}"/>
   <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/costing/mainCostProfitabilityDirective.js')}"/>
   <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/costing/discountsMarginDirective.js')}"/>
   <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/costing/priceWaterfallDirective.js')}"/>
   <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/costing/costLineItemDirective.js')}"/>

    <!-- Assets -->
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/installedproducts/assetSummaryDialogDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/installedproducts/assetHeaderDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/installedproducts/assetsFilterDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/installedproducts/mainAssetDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/installedproducts/assetActionsDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/installedproducts/cancelAssetDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/installedproducts/changeAssetsDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/installedproducts/swapAssetDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/installedproducts/swapConfirmDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/installedproducts/searchAssetsDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/installedproducts/pricingDeltaDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/installedproducts/renewAssetDirective.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/directives/installedproducts/assetHeaderGridDirective.js')}"/>
    <!-- Apex Error -->
    <div id="idErrorMsg">
        <apex:pageMessages />
    </div>
    <!-- Translation of Custom Label and Fields -->
    <apex:include pageName="Apttus_Config2__Translation"/>

    <!-- Section for binding visualforce template values from controller -->
    <div id="idUserSettingsSection" style="display:none;">
        <div id="idCurrencyTemplate">
            <apex:outputField value="{!templateLineItem.Apttus_Config2__BaseCost__c}"/>
        </div>
        <div id="idQuantityTemplate">
            <apex:outputField value="{!templateLineItem.Apttus_Config2__Quantity__c}"/>
        </div>
        <div id="idDateTemplate">
            <apex:outputField value="{!templateLineItem.Apttus_Config2__StartDate__c}"/>
        </div>
        <!-- Wrap output text in span tag to match outputField behavior  -->
        <div id="idQuantityPrecision">
            <span><apex:outputText value="{!SystemSettings['quantity']}"/></span>
        </div>
        <div id="idCurrencyPrecision">
            <span><apex:outputText value="{!SystemSettings['currency']}"/></span>
        </div>
        <div id="idDefaultIconId">
            <span><apex:outputText value="{!SystemSettings['defaultIconId']}"/></span>
        </div>
    </div>

    <script type="text/javascript">
        /**
         * Anonymous blocks for configuring the different modules.
         * These config blocks need to be defined within the page to take
         *  advantage of visualforce binding for initializing the app with
         *  constant pieces of data.
         */
        (function() {
            //Create System Properties constant
            var baseUrl = "{!URLFOR($Resource.ngCPQ, '/aptCPQUI')}";
            var baseFileUrl = '';
            //Special visualforce condition for when there is no icon id
            <apex:outputPanel layout="none" rendered="{!SystemSettings['defaultIconId'] != 'none'}">
                baseFileUrl = formatAttachmentUrl("{!URLFOR($Action.Attachment.Download, SystemSettings['defaultIconId'])}");
            </apex:outputPanel>
            //End VF conditionally rendered code.
            var systemConstants = {
                "baseUrl": baseUrl,
                "baseFileUrl": baseFileUrl,
                "salesforceUrl": "{!SystemSettings['salesforceUrl']}",
                "sitePrefix": "{!$Site.Prefix}",
                "nsPrefix": "{!SystemSettings['namespacePrefix']}",
                "isFieldExpressionsEnabled":"{!SystemSettings['isFieldExpressionsEnabled']}",
                "msecPerDay": 86400000,
                "pageParams" : JSON.parse('{!JSENCODE(pageParams)}'),
                "customSettings" : JSON.parse('{!JSENCODE(CustomSettings)}'),
                "picklistMetadata" : JSON.parse('{!JSENCODE(PicklistMetadata)}')
                
            };
            angular.module('aptCPQData').constant('baseUrl', baseUrl);
            angular.module('aptCPQData').constant('systemConstants', systemConstants);

            //Configure Modules
            baseConfig.$inject = ['aptBase.RemoteServiceProvider', 'aptBase.i18nServiceProvider'];
            angular.module('aptBase').config(baseConfig);
            dataConfig.$inject = ['ConfigurationDataServiceProvider'];
            angular.module('aptCPQData').config(dataConfig);
            
            //Format the attachment file url
            function formatAttachmentUrl(sfdcString) {
                var pos = sfdcString.indexOf('FileDownload');
                if (pos != -1) {
                	sfdcString = sfdcString.substring(0, pos) + 'FileDownload?file=';
                }
                return sfdcString;
                
            }

            // Overriding the SFDC navigateToUrl for this page as we need custom action to be performed on the click of the button. ( ctrl/cmd + click - should open the link in new tab)
            navigateToUrl = function (url) {
                var event = window.event || navigateToUrl.caller.arguments[0]; // window.event will not be returning the event object in mozilla so getting it from the callee arguments
                if (event.ctrlKey || event.metaKey) {
                    window.open(url, '_blank');
                } else {
                    window.location = url;
                }
            }

            function dataConfig(ConfigurationDataServiceProvider) {
                var cartId = "{!cartId}";
                var configRequestId = "{!configRequestId}";
                var priceListId;
                var pageParams = JSON.parse('{!JSENCODE(pageParams)}');
                ConfigurationDataServiceProvider.setRequestBase(cartId, configRequestId, priceListId, pageParams);

            }
            function baseConfig(RemoteServiceProvider, i18nServiceProvider) {
                // Extracting user locale preference from visualforce.
                var userSettings = {};
                try {
                    userSettings = getUserSettings();
                    // If any properties are undefined, the provider will use en_US defaults. 
                    i18nServiceProvider.setDateTemplate(userSettings.dateTemplate);
                    i18nServiceProvider.setCurrencyTemplate(userSettings.currencyTemplate);
                    i18nServiceProvider.setQuantityTemplate(userSettings.quantityTemplate);
                    i18nServiceProvider.setPrecision(userSettings.precisionMap);
                    i18nServiceProvider.setLocale(userSettings.locale);
                    i18nServiceProvider.setDateFormat(userSettings.dateFormat);
                
                } catch (ex) {
                    if (console && typeof console.info === 'function') {
                        console.info('Could not extract user locale settings. Defaulting to en_US');
                    
                    }

                }

                /**
                 * Resolve VF remote names and configure their behavior.
                 * Each key in this object is used to reference a VF remote aciton.
                 * Each can be:
                 *  - String: the resolved name of the remote action;
                 *  - Object with properties:
                 *          actionName: the resolved name of the remote action,
                 *          skipLoader: if true, action does affect progress-indicator. Default false.
                 * 
                 */
                var remoteActions = {
                    // Initilize cart when cartId and configRequestId is missing
                    
                    // affected lineitems for config revalidation
                    getAffectedProducts: '{!$RemoteAction.RemoteCPQController.getAffectedProducts}',
                    applyConfigurationChanges: '{!$RemoteAction.RemoteCPQController.doApplyConfigurationChanges}',
                    // Configuration Data
                    getConfigurationData: '{!$RemoteAction.RemoteCPQController.getConfigurationData}',
                    // Catalog operations
                    getCategories: '{!$RemoteAction.RemoteCPQController.getCategories}',
                    searchProducts: '{!$RemoteAction.RemoteCPQController.searchProducts}',
                    compareProducts: '{!$RemoteAction.RemoteCPQController.compareProducts}',
                    getProductsByIds: '{!$RemoteAction.RemoteCPQController.getProductsByIds}',
                    getProductDetails: {
                        actionName: '{!$RemoteAction.RemoteCPQController.getProductDetails}',
                        skipLoader: {!IsLoaderOptimized}
                    },
                    // Get line item information
                    getCart: '{!$RemoteAction.RemoteCPQController.getCart}',
                    getCartLineItems: '{!$RemoteAction.RemoteCPQController.getCartLineItems}',
                    getLineItemDetails: {
                        actionName: '{!$RemoteAction.RemoteCPQController.getLineItemDetails}',
                        skipLoader: {!IsLoaderOptimized}
                    },
                    getLineItemAdvancedApprovalURL: {
                        actionName: '{!$RemoteAction.RemoteCPQController.getLineItemAdvancedApprovalURL}',
                        skipLoader: {!IsLoaderOptimized}
                    },
                    getGuidePageUrl: '{!$RemoteAction.RemoteCPQController.getGuidePageUrl}',
                    // Submit items to server
                    performAction: '{!$RemoteAction.RemoteCPQController.performAction}',
                    cloneBundleLineItem: '{!$RemoteAction.RemoteCPQController.cloneBundleLineItem}',
                    cloneOptionLineItem: '{!$RemoteAction.RemoteCPQController.cloneOptionLineItem}',
                    // Call to start or continue pricing
                    updatePrice: {
                        actionName: '{!$RemoteAction.RemoteCPQController.updatePrice}',
                        skipLoader: {!IsLoaderOptimized}
                    },
                    updateAdHocGroup: '{!$RemoteAction.RemoteCPQController.updateAdHocGroup}',
                    // Mark a constraint rule as ignored
                    getLineItemDetails: {
                        actionName: '{!$RemoteAction.RemoteCPQController.getLineItemDetails}',
                        skipLoader: {!IsLoaderOptimized}
                    },
                    getProductDetails: {
                        actionName: '{!$RemoteAction.RemoteCPQController.getProductDetails}',
                        skipLoader: {!IsLoaderOptimized}
                    },
                    performAction: '{!$RemoteAction.RemoteCPQController.performAction}',
                    performActionQuietly: { 
                        actionName: '{!$RemoteAction.RemoteCPQController.performAction}',
                        skipLoader: {!IsLoaderOptimized}
                    },
                    ignoreRuleAction: { 
                        actionName: '{!$RemoteAction.RemoteCPQController.ignoreRuleAction}', 
                        skipLoader: {!IsLoaderOptimized} 
                    },
                    // Checking constraint rules for excluded products for cart
                    getExcludedProductIds: { 
                        actionName: '{!$RemoteAction.RemoteCPQController.getExcludedProductIds}', 
                        skipLoader: {!IsLoaderOptimized} 
                    },
                    getExcludedOptionIds: { 
                        actionName: '{!$RemoteAction.RemoteCPQController.getExcludedOptionIds}', 
                        skipLoader: {!IsLoaderOptimized} 
                    },
                    // Asset Based Ordering operations
                    getAssetLineItems: '{!$RemoteAction.RemoteCPQController.getAssetLineItems}',
                    getAssetFilters: '{!$RemoteAction.RemoteCPQController.getAssetFilterFields}',
                    performAssetActions: '{!$RemoteAction.RemoteCPQController.performAssetActions}',
                    getReplacementProducts: '{!$RemoteAction.RemoteCPQController.getReplacementProducts}',
                    getAttributeRules: '{!$RemoteAction.RemoteCPQController.getAttributeRules}',
                    calculateMetricsForAssets: '{!$RemoteAction.RemoteCPQController.calculateMetricsForAssets}',
                    getReferenceObjects: { 
                        actionName: '{!$RemoteAction.RemoteCPQController.getReferenceObjects}',
                        skipLoader: {!IsLoaderOptimized} 
                    },
                    getObjectForSummary: '{!$RemoteAction.RemoteCPQController.getObjectForSummary}',
                    doReplaceProduct: '{!$RemoteAction.RemoteCPQController.doReplaceProduct}',
                    getRecommendedProducts: '{!$RemoteAction.RemoteCPQController.getRecommendedProducts}',
                    getAnalyticsRecommendedProducts: '{!$RemoteAction.RemoteCPQController.getAnalyticsRecommendedProducts}',
                    getPriceBreakups: '{!$RemoteAction.RemoteCPQController.getPriceBreakups}',
                    // typeahead functionality with solr
                    getTypeaheadResults: { 
                        actionName: '{!$RemoteAction.RemoteCPQController.getTypeaheadResults}',
                        skipLoader: {!IsLoaderOptimized} 
                    },
                    // Incentives
                    getIncentivesList: '{!$RemoteAction.RemoteCPQController.getIncentivesList}',
                    applyIncentives: '{!$RemoteAction.RemoteCPQController.applyIncentives}',
                    toggleExpressionLock: {
                        actionName: '{!$RemoteAction.RemoteCPQController.toggleExpressionLock}',
                        skipLoader: {!IsLoaderOptimized} 
                    },
                    createNewCollabRequest : '{!$RemoteAction.RemoteCPQController.createNewCollabRequestSO}',
                    saveCollaborationRequest: '{!$RemoteAction.RemoteCPQController.saveCollaborationRequest}',
                    getCollaborationRequest: '{!$RemoteAction.RemoteCPQController.getCollaborationRequestSO}',
                    updateCollaborationRequest: '{!$RemoteAction.RemoteCPQController.updateCollaborationRequest}',
                    updateAttachmentToCollabReq: '{!$RemoteAction.RemoteCPQController.uploadAttachmentToCollaborationRequest}',
                    mergeCollaborationRequest: '{!$RemoteAction.RemoteCPQController.mergeCollaborationRequest}',
                    deleteAttachments: '{!$RemoteAction.RemoteCPQController.deleteAttachments}',
                    getLineItemFieldsMetaData: '{!$RemoteAction.RemoteCPQController.getLineItemFieldsMetaData}',
                    getUsagePriceTiers: '{!$RemoteAction.RemoteCPQController.getUsagePriceTiers}',
                    importFavoriteConfigurationToCart: '{!$RemoteAction.RemoteCPQController.importFavoriteConfigurationToCart}',
                    searchFavoriteConfigurations: '{!$RemoteAction.RemoteCPQController.searchFavoriteConfigurations}',
                    saveFavoriteConfiguration: '{!$RemoteAction.RemoteCPQController.saveFavoriteConfiguration}',
                    getAssetLineItemsForPage: '{!$RemoteAction.RemoteCPQController.getAssetLineItemsForPage}',
                    getCosts: '{!$RemoteAction.RemoteCPQController.getCosts}',
                    updateCosts: '{!$RemoteAction.RemoteCPQController.updateCosts}'

                };
                RemoteServiceProvider.setRemoteActions(remoteActions);
                // Need retURL or other url for redirect. Default is to redirect to '/'. 
                RemoteServiceProvider.setRedirectLocation('{!$CurrentPage.parameters.retURL}');
                // Set flag true to overrides skipLoader flags of RemoteActions and show loader all remoteServiceCalls.     
                RemoteServiceProvider.setTrackAllRemoteCalls(false);
            }

            /**
             * Extract VF-resolved date and currency formatting according to user preference
             * @return {Object}
             */
            function getUserSettings() {
                var userSettings = {
                    currencyTemplate: getCurrencyTemplate(),
                    quantityTemplate: getQuantityTemplate(),
                    dateTemplate: getDateTemplate(),
                    precisionMap: getPrecisionMap()
                };
                if (typeof UserContext !== 'undefined') {
                    userSettings.locale = UserContext.locale;
                    userSettings.dateFormat = UserContext.dateFormat;

                }
                return userSettings;

                //Helper function to get text from output field by id.
                function getOutputFieldText(fieldId) {
                    var fieldElement = document.querySelector('#' + fieldId + ' span');
                    if (fieldElement) {
                        return fieldElement.textContent;
                    }
                    return void 0;

                }

                function getCurrencyTemplate () {
                    var currencyTemplate = '$1,234.56';
                    var templateText = getOutputFieldText('idCurrencyTemplate');
                    if (!templateText) {
                        return currencyTemplate;

                    }
                    // Isolate multi-currency section: SFDC uses "USD 1.23 (OTH 4.56)" format,
                    // use regex to break that into ["USD 1.23 (OTH 4.56)", "USD 1.23", "OTH 4.56"]
                    var multiMatch = templateText.match(/([^\(]*)\(?([^\)]*)\)?/);
                    if (multiMatch && multiMatch[1]) {
                        templateText = multiMatch[1];

                    }
                    //Check if formatted text is a valid template
                    if (templateText.length > 2) {
                        currencyTemplate = templateText;
                            
                    }
                    return currencyTemplate;

                }

                function getQuantityTemplate() {
                    var quantityTemplate = '1,234.56';
                    var templateText = getOutputFieldText('idQuantityTemplate');
                    if (!templateText) {
                        return quantityTemplate;

                    }
                    //Check if formatted text is a valid template
                    if (templateText.length > 2) {
                        quantityTemplate = templateText;
                            
                    }
                    return quantityTemplate;

                }

                function getDateTemplate() {
                    var dateTemplate = '01/23/45';
                    var templateText = getOutputFieldText('idDateTemplate');
                    if (!templateText) {
                        return dateTemplate;

                    }
                    dateTemplate = templateText;
                    return dateTemplate;

                }

                function getPrecisionMap() {
                    var quantity = Number(getOutputFieldText('idQuantityPrecision')),
                            currency = Number(getOutputFieldText('idCurrencyPrecision'));
                    var precision = {
                        quantity: quantity,
                        currency: currency
                    };
                    return precision;

                }

            }

        })();

    </script>
    
    <script type="text/javascript">
        /**
         * remove css files added by VF page in lightning mode
         */
        var vfCSSLinks = document.querySelectorAll('link[href^="/sCSS/"]');
        for (var len = vfCSSLinks.length, i=0; i<len; ++i) {
            var oneLink = vfCSSLinks[i]; 
            oneLink.parentNode.removeChild(oneLink);
        }
        
        /**
         * recieve message from custom action dialog
         * WARNING: limit exposure to functions to maintain better backward compatibility.
         * TODO: move this to a javascript file 
         */
        function receiveDialogMessage(event) {
            var origin = event.origin || event.originalEvent.origin; // For Chrome, the origin property is in the event.originalEvent object.
            var actionDialog = document.querySelector("custom-action-dialog");
            if (actionDialog && event.data && event.data.action) {
                if (event.data.action == 'reloadCart') {
                    angular.element(actionDialog).injector().get('CartDataService').reloadCart();
                }

                if (event.data.action == 'closeDialog') {
                    var scope = angular.element(document.querySelector("custom-action-dialog")).scope();
                    scope.customAction.close();
                    scope.$apply();
                }
                
                if (event.data.action == 'reloadPage') {
                    //first close the dialog
                    var scope = angular.element(document.querySelector("custom-action-dialog")).scope();
                    scope.customAction.close();
                    //show progress bar
                    var service = angular.element(document.querySelector("custom-action-dialog")).injector().get("ActionHandlerService");
                    service.isServerActionInProgress = true;
                    
                    scope.$apply();
                    window.location.reload();
                    
                }
                
            }
        
        }
        window.addEventListener("message", receiveDialogMessage, false);
        
        
    </script>

    <!-- Application  -->

    <!--[if lt IE 8]>
    <p class="browsehappy">
        You are using an <strong>outdated</strong> browser.
        Please <a href="http://browsehappy.com/">upgrade your browser</a>
        to improve your experience.
    </p><![endif]-->
    <div ng-app="aptCPQUI">
        <div class="header-global">
            <div ui-view="globalHeader"></div>
        </div>
        <div class="process-trail">
            <div ui-view="processTrail"></div>
        </div>
        <div class="system-notification">
            <div ui-view="systemNotification"></div>
        </div>
        <div class="content-container">
            <div ui-view="layout"></div>
        </div>
        <constraint-dialog></constraint-dialog>
        <product-summary-dialog></product-summary-dialog>
        <favorite-summary-dialog></favorite-summary-dialog>
        <search-lookup-dialog></search-lookup-dialog>
        <custom-action-dialog></custom-action-dialog>
        <div class="display-actions">
            <div ui-view="displayActions"></div>
        </div>
    </div>
    <apex:includeScript value="{!URLFOR($Resource.Apttus_Config2__ngCPQ, '/aptCPQUI/assets/fonts/ss-pika.js')}"/>
</apex:page>