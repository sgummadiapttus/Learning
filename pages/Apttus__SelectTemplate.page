<!-- 
    Apttus Contract Management
    SelectTemplate
     
    @2009-2015 Apttus Inc. All rights reserved.
    
    parameters
    ==========
    Name            | Required | Description
    ================|==========|======================================================================================
    id              | Yes      | The record id of the agreement
                    |          |
    action          | Yes      | The document action type. 
                    |          | Valid values are : 
                    |          | ------------------
                    |          | Preview_Agreement, 
                    |          | Generate_Agreement, 
                    |          | Regenerate_Agreement. 
                    |          | Generate_Supporting_Document
                    |          |
    templateType    | Yes      | The template type. 
                    |          | Valid values are : 
                    |          | ------------------
                    |          | Agreement, 
                    |          | Supporting_Document
                    |          |
    autoGen         | No       | Indicates a one click mode. The first template found for the user would be auto selected.
                    |          | The default value is false. 
                    |          |                 
    docFormat       | No       | The document format for one click mode. Only valid when auto generate is enabled. 
                    |          | 
    protectionLevel | No       | The protection level for one click mode. Only valid when auto generate is enabled. 
                    |          | 
    isDraft         | No       | The watermark indicator for one click mode. Only valid when auto generate is enabled. 
                    |          | 
    ===================================================================================================================
    
 -->
<apex:page standardController="Apttus__APTS_Agreement__c" 
           extensions="Apttus.SelectTemplateController" 
           showHeader="true" 
           sidebar="true" > 
        
    <apex:include pageName="Apttus__ComplyJSLibInclude" />
    
    <apex:stylesheet value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/assets/skins/sam/skin.css')}" />
 
    <apex:includescript value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/yahoo-dom-event/yahoo-dom-event.js')}" />
    <apex:includescript value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/dragdrop/dragdrop-min.js')}" />
    <apex:includescript value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/container/container-min.js')}" />
    <apex:includescript value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/animation/animation-min.js')}" />
    
    <script>
    
        // Create a namespace for our custom functions
        YAHOO.namespace("force.com");
        
        // load panel
        
        /**
         * Builds the load panel.
         */
        YAHOO.force.com.buildLoadPanel = function() {
           
            YAHOO.force.com.loadPanel = new YAHOO.widget.Panel(
                "loadPanel",  // The id of our dialog container
                { 
                        width           :   "300px", // You can play with this until it's right
                        visible         :   false,   // Should be invisible when rendered
                        draggable       :   false,   // Make the dialog draggable
                        close           :   false,   // Don't include a close title button
                        modal           :   true,    // Make it modal
                        fixedCenter     :   true,    // Keep centered if window is scrolled
                        zindex          :   40,      // Make sure it's on top of everything
                        constraintoviewport: true,
                        
                        // This line adds the appear/disapper fade effect
                        effect          :   {effect:YAHOO.widget.ContainerEffect.FADE,duration:0.25}
                                    
                }
            );
            
            // header
            YAHOO.force.com.loadPanel.setHeader("{!JSINHTMLENCODE($Label.Apttus__LoadingPage)}");
            // set image
            YAHOO.force.com.loadPanel.setBody('<center><img src="{!URLFOR($Resource.Apttus__Image_LoadingPage)}" /></center>');
            // Render the dialog to the document.body level of the DOM
            YAHOO.force.com.loadPanel.render(document.body);
            
        }
        
        // wait panel
        
        /**
         * Builds the wait panel.
         */
        YAHOO.force.com.buildWaitPanel = function() {
            document.body.className = document.body.className + " yui-skin-sam";
            YAHOO.force.com.waitPanel = new YAHOO.widget.Panel(
                "waitPanel",  // The id of our dialog container
                { 
                        width           :   "300px", // You can play with this until it's right
                        visible         :   false,   // Should be invisible when rendered
                        draggable       :   false,   // Make the dialog draggable
                        close           :   false,   // Don't include a close title button
                        modal           :   true,    // Make it modal
                        fixedCenter     :   true,    // Keep centered if window is scrolled
                        zindex          :   40,      // Make sure it's on top of everything
                        constraintoviewport: true,
                        
                        // This line adds the appear/disapper fade effect
                        effect          :   {effect:YAHOO.widget.ContainerEffect.FADE,duration:0.25}
                                    
                }
            );
            
            // header
            YAHOO.force.com.waitPanel.setHeader("{!JSINHTMLENCODE($Label.Apttus__GeneratingAgreement)}");
            // set image
            YAHOO.force.com.waitPanel.setBody('<center><img src="{!URLFOR($Resource.Apttus__Image_LoadingPage)}" /></center>');
            // Render the dialog to the document.body level of the DOM
            YAHOO.force.com.waitPanel.render(document.body);
            
        }
        
        // Function called when the DOM is ready to create the dialog,
        // render the dialog into the document body, add our dialog skin
        // css to the body tag, and wire up the buttons on our dialog   
        YAHOO.force.com.onDOMReady = function() {
            
            // build the load panel
            YAHOO.force.com.buildLoadPanel();
            // build the wait panel
            YAHOO.force.com.buildWaitPanel();
            
        }
        
        // build the tree as soon as the DOM is in a usable state
        YAHOO.util.Event.onDOMReady(YAHOO.force.com.onDOMReady);    
        
    </script>
    
    <script type="text/javascript"> 
        
        /**
         * Callback after a template is selected
         * templateId the selected template id
         */
        function onSelectTemplate(templateId) {
            
            // show modal panel
            YAHOO.force.com.loadPanel.show();
            
            // call the action
            doSelect(""+ templateId +"");
            
        }
        
        /**
         * Callback when the async generate action button is clicked
         */
        function onAsyncGenerateActionClick() {
            // show the modal panel
            YAHOO.force.com.waitPanel.show();
            // return false to allow the action to proceed
            return false;
            
        }
        
        /**
         * Callback when the submit action button is clicked
         */
        function onSubmitActionClick() {
            // show the modal panel
            YAHOO.force.com.loadPanel.show();
            // return false to allow the action to proceed
            return false;
            
        }
        
        /**
         * Go back to the detail page
         */
        function goBack() {
            // get the agreement id
            var agreementId = "{!JSENCODE(agreementId)}";
        
            // go back to the detail page
            navigateTo("/" + agreementId);
            
        }
        
        /**
         * Cancel the generation
         */
        function cancel() {
            // Go back to the detail page
            goBack();
            
        }
        
        /**
         * Callback after the document was downloaded
         */
        function afterDownload() {
            
            // delay to allow the document to be downloaded 
            setTimeout(function() {
                
                // return to the agreement detail page
                doReturn();
            }, 5000);
            
            // return true to allow the download to proceed
            return true;
            
        }
        
        /**
         * Callback after the timeout occurred
         */
        function afterTimeout() {
            
            try {
                
                // get the timeout message
                var cMsg = "{!JSENCODE(TimeoutMessage)}";
                var message = "";
                var lines = cMsg.split("\\n");
                for (var i = 0; i < lines.length; i++) {
                    if (i > 0) {
                        message += "\n";
                    }
                    message += lines[i];
                }
                
                // hide modal panel
                YAHOO.force.com.waitPanel.hide();
                
                // show timeout message
                if (confirm(message)) {
                    // back to agreement detail page
                    goBack();
                    
                }
                
            } catch(ex) {
                erroralert(cERROR_UNKNOWN, ex);
                // back to agreement detail page
                goBack();
                
            } 
            
        }
        
        /**
         * Callback after generate is done
         */
        function afterGenerate() {
            
            // cancel timeout
            cancelTimeout();
            // hide modal panel
            YAHOO.force.com.waitPanel.hide();
            
        }
        
        /**
         * Callback after the submit is done
         */
        function afterSubmit() {
            
            try {
                
                // hide modal panel
                YAHOO.force.com.loadPanel.hide();
                // get the confirmation message
                var message = "{!JSENCODE($Label.Apttus__SubmitDocStatusMessage)}";
                // show confirmation message
                alert(message);
                
            } catch(ex) {
                erroralert(cERROR_UNKNOWN, ex);
                
            } finally {
                // back to agreement detail page
                goBack();
                
            }
            
        }
        
        /**
         * Cancel the timeout
         */
        function cancelTimeout() {
        
            if (gTimeoutId != null) {
                clearTimeout(gTimeoutId);
                gTimeoutId = null;
                
            }
            
        }
        
        /**
         * Generate the document
         */
        function doGenerateDoc() {
            
            var exception = null;
           
            try {
            
                var timeoutMillis = parseInt("{!CallTimeoutMillis}") - 2000;
                
                // show modal panel
                YAHOO.force.com.waitPanel.show();
                
                // delay to allow prepare step to run   
                setTimeout(function() {
                    try {
                        // generate the document
                        generateDoc();
                    } catch (e) {
                        erroralert("generateDoc():", e);
                        // back to agreement detail page
                        goBack();
                        
                    } 
                    
                }, 1000);
                
                // delay until timeout  
                gTimeoutId = setTimeout(function() {
                                try {
                                    // handle timeout
                                    afterTimeout();
                                } catch (e) {
                                    erroralert("afterTimeout():", e);
                                    // back to agreement detail page
                                    goBack();
                                    
                                } 
                    
                             }, timeoutMillis);
                             
            } catch(ex) {
                exception = ex;
                // hide modal panel
                YAHOO.force.com.waitPanel.hide();
                
                erroralert("generateDoc():", ex);
                
            } finally {
                if (exception != null) {
                    // back to agreement detail page
                    goBack();
                    
                } 
                
            }
            
        }
        
    </script>
    
    <apex:sectionHeader title="{!pageTitle}" subtitle="{!Apttus__APTS_Agreement__c.Name}"/>
    
    <apex:form id="generateDocument" >
        <!--  required fields -->
        <apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__AllowableOutputFormats__c}" rendered="false"/>
        <apex:outputText value="{!Apttus__APTS_Agreement__c.Apttus__VersionAware__c}" rendered="false" />
        
        <apex:outputPanel id="idSelectTemplatePanel">
            
            <apex:outputPanel rendered="{!NOT(isInitialized)}">
                <script>
                   // register to invoke the function after the page load
                    window.onload = function() { 
                        // initialize the controller
                        doInit();
                        
                    };
                   
                </script>
            </apex:outputPanel>
            
            <apex:outputPanel rendered="{!isInitialized}" >
                
                <apex:pageBlock mode="edit" rendered="{!NOT(canEditAgreement)}" >
                    <apex:pageMessages />
                    <apex:outputText value="{!$Label.Apttus__InsufficientPrivileges}" 
                                     style="font-family: Arial, Helvetica, sans-serif;font-weight: bold;font-size: 12pt;" /><p/>
                    <apex:outputText value="{!$Label.Apttus__InsufficientPrivilegesDetail}" /><br/>
                    <apex:pageBlockButtons location="bottom" >
                        <apex:commandButton action="{!doReturn}" value="{!$Label.Apttus__Return}" immediate="true" />
                    </apex:pageBlockButtons>
                </apex:pageBlock>
                
                <apex:outputPanel id="idInputPanel" 
                                  rendered="{!canEditAgreement}" >
                
                    <apex:pageBlock mode="edit" rendered="{!NOT(DocGenerated)}">
                        <apex:pageMessages />
                        
                        <apex:pageBlockSection title="{!$Label.Apttus__Options}" columns="1">
                        
                            <apex:panelGrid columns="1" rendered="{!showOutputFormats}" >
                                <apex:outputLabel value="{!step1}{!$Label.Apttus__SelectOutputFormat}" 
                                                  for="idOutputFormat" 
                                                  style="font-weight:bold" />
                                <apex:selectRadio id="idOutputFormat" value="{!outputFormat}" >
                                    <apex:selectOptions value="{!outputFormats}" />
                                </apex:selectRadio>
                                <p/>
                            </apex:panelGrid>
                            
                            <apex:panelGrid columns="1" rendered="{!showProtectionLevel}">
                                <apex:outputLabel value="{!step2}{!$Label.Apttus__SelectDocumentProtection}" 
                                                  for="idProtectionLevel" 
                                                  style="font-weight:bold" />
                                <apex:selectRadio id="idProtectionLevel" value="{!protectionLevel}"  >
                                    <apex:selectOptions value="{!protectionLevels}" />
                                </apex:selectRadio>
                                <p/>
                            </apex:panelGrid>
                            
                            <apex:panelGrid columns="1" rendered="{!showWatermark}" >
                                <apex:outputLabel value="{!step3}{!$Label.Apttus__IncludeWatermark}" 
                                                  for="idWatermark" 
                                                  style="font-weight:bold" />
                                <apex:inputCheckbox id="idWatermark" 
                                                    value="{!includeWatermark}"
                                                    selected="{!includeWatermark}" />       
        
                                <p/>
                            </apex:panelGrid>
                            
                            <apex:panelGrid columns="1">
                                <apex:outputText value="{!step4}{!$Label.Apttus__SelectTemplate}" 
                                                 style="font-weight:bold"/>
                                <p/>
                            </apex:panelGrid>
                            
                        </apex:pageBlockSection>
                    </apex:pageBlock>
                </apex:outputPanel> 
            
                <apex:outputPanel id="idTemplatePanel" 
                                  rendered="{!canEditAgreement}" >
                                  
                    <apex:pageBlock rendered="{!NOT(DocGenerated)}">
                    
                        <apex:pageBlockButtons location="top">
                            <apex:outputPanel id="idButtonsTop" >
                                <apex:commandButton value="{!$Label.Apttus__Generate}"   
                                                    onclick="doGenerateDoc();" 
                                                    rendered="{!NOT(IsAsyncCallEnabled)}"
                                                    reRender="idInputPanel,idOutputPanel" 
                                                    disabled="{!NOT(allowGenerate)}" />
                                <apex:commandButton value="{!$Label.Apttus__Generate}"  
                                                    action="{!doStartAsyncCall}" 
                                                    onclick="onAsyncGenerateActionClick();" 
                                                    rendered="{!IsAsyncCallEnabled}" 
                                                    oncomplete="doGenerateDoc();"
                                                    disabled="{!NOT(allowGenerate)}" />
                                <apex:commandButton value="{!$Label.Apttus__Submit}"   
                                                    action="{!doSubmitDoc}"
                                                    onclick="onSubmitActionClick();" 
                                                    rendered="{!IsSubmitCallEnabled}"
                                                    oncomplete="afterSubmit();"
                                                    reRender="idInputPanel" 
                                                    disabled="{!NOT(allowGenerate)}" />
                                <apex:commandButton value="{!$Label.Apttus__Return}"   
                                                    action="{!doReturn}" 
                                                    immediate="true" />
                                
                            </apex:outputPanel>
                        </apex:pageBlockButtons>
                        
                        <apex:pageBlockButtons location="bottom" rendered="{!NumOfTemplates > 5}">
                            <apex:outputPanel id="idButtonsBottom" >
                                <apex:commandButton value="{!$Label.Apttus__Generate}"   
                                                    onclick="doGenerateDoc();" 
                                                    rendered="{!NOT(IsAsyncCallEnabled)}"
                                                    reRender="idInputPanel,idOutputPanel" 
                                                    disabled="{!NOT(allowGenerate)}" />
                                <apex:commandButton value="{!$Label.Apttus__Generate}"  
                                                    action="{!doStartAsyncCall}" 
                                                    onclick="onAsyncGenerateActionClick();" 
                                                    rendered="{!IsAsyncCallEnabled}" 
                                                    oncomplete="doGenerateDoc();"
                                                    disabled="{!NOT(allowGenerate)}" />
                                <apex:commandButton value="{!$Label.Apttus__Submit}"   
                                                    action="{!doSubmitDoc}"
                                                    onclick="onSubmitActionClick();" 
                                                    rendered="{!IsSubmitCallEnabled}"
                                                    oncomplete="afterSubmit();"
                                                    reRender="idInputPanel" 
                                                    disabled="{!NOT(allowGenerate)}" />
                                <apex:commandButton value="{!$Label.Apttus__Return}"  
                                                    action="{!doReturn}" 
                                                    immediate="true" />
                            
                            </apex:outputPanel>
                        </apex:pageBlockButtons>
                        
                        <apex:pageBlockSection title="{!$ObjectType.Apttus__APTS_Template__c.LabelPlural}"  
                                               columns="1" 
                                               collapsible="false" >
                                               
                            <apex:pageBlockTable value="{!templates}" 
                                                 var="templateInfo" 
                                                 width="100%" 
                                                 rendered="{!hasTemplates}" >
                            
                                <apex:column headervalue="{!$Label.Apttus__Select}" >
                                    <apex:outputPanel rendered="{!templateInfo.selected}" >
                                        <input type="radio" 
                                               checked="{!templateInfo.selected}"
                                               onclick="onSelectTemplate('{!templateInfo.templateSO.Id}')" />
                                               <!-- 
                                               onclick="invokeDoSelect('{!templateInfo.templateSO.Id}')" />
                                               -->
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!NOT(templateInfo.selected)}">
                                        <input type="radio"
                                               onclick="onSelectTemplate('{!templateInfo.templateSO.Id}')" />
                                               <!-- 
                                               onclick="invokeDoSelect('{!templateInfo.templateSO.Id}')" />
                                               -->
                                    </apex:outputPanel>
                                </apex:column>
                                <apex:column value="{!templateInfo.templateSO.Name}" />
                                <apex:column value="{!templateInfo.templateSO.Apttus__Guidance__c}" />
                                <apex:column value="{!templateInfo.templateSO.Apttus__Category__c}" />
                                <apex:column value="{!templateInfo.templateSO.Apttus__Subcategory__c}" />
                                
                            </apex:pageBlockTable>
                            
                            <apex:outputText value="{!$Label.Apttus__NoTemplatesToDisplay}" rendered="{!NOT(hasTemplates)}" />
                            
                        </apex:pageBlockSection>  
                
                    </apex:pageBlock>
                
                </apex:outputPanel> 
            
                <apex:outputPanel id="idOutputPanel" 
                                  rendered="{!canEditAgreement}" >
                
                    <apex:outputPanel rendered="{!DocGenerated}" >
                        <apex:pageBlock rendered="{!NOT(isInLinePdf)}" >
                            
                            <apex:pageBlockButtons location="bottom">
                                <apex:commandButton value="{!$Label.Apttus__Return}" 
                                                    action="{!doReturn}"  
                                                    immediate="true" />
                            </apex:pageBlockButtons>
                            <apex:outputText style="font-size: 12px; font-weight: bold;" 
                                             value="{!$Label.Apttus__DocumentGenerationSuccess}" />
                            <p/>
                            <apex:pageBlockSection title="{!$Label.Apttus__DocumentDetail}" columns="1">
                                <apex:pageBlockSectionItem >
                                    <apex:outputLabel style="font-weight: bold;" 
                                                      value="{!$Label.Apttus__FileName}" 
                                                      for="idFileName" />
                                    <apex:outputText id="idFileName" value="{!docInfo.Name}" />
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem >
                                    <apex:outputLabel style="font-weight: bold;" 
                                                      value="{!$Label.Apttus__Size}" 
                                                      for="idFileSize" />
                                    <apex:outputText id="idFileSize" 
                                                     style="font-weight: bold;" 
                                                     value="{!docInfo.body_length}KB" />
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem >
                                    <apex:outputLabel value="" for="idFileLink" />
                                    <apex:outputLink id="idFileLink" 
                                                     value="{!docURL}" 
                                                     charset="UTF-8" 
                                                     type="{!docInfo.content_type}" 
                                                     title="{!$Label.Apttus__ViewDocument}"  
                                                     target="_blank" 
                                                     onclick="afterDownload()">{!$Label.Apttus__ViewFileInstruction}</apex:outputLink>
                                </apex:pageBlockSectionItem>
                                
                            </apex:pageBlockSection>
                        
                        </apex:pageBlock>
                        
                    </apex:outputPanel>
                </apex:outputPanel> 
                
                <apex:outputPanel id="idAutoGenPanel" 
                                  rendered="{!canEditAgreement && IsAutoGenEnabled}" >
                    <script>
                        // auto generate the document
                        doGenerateDoc();
                       
                    </script>
                </apex:outputPanel>
                
            </apex:outputPanel>
            
        </apex:outputPanel>
        
        <!--  Javascript functions -->
        <apex:actionFunction name="doSelect" 
                             action="{!doSelect}" 
                             oncomplete="YAHOO.force.com.loadPanel.hide();" 
                             reRender="idInputPanel,idTemplatePanel" >
            <apex:param name="templateId" value="" />
        </apex:actionFunction>      
        
        <apex:actionFunction name="doInit" 
                             action="{!doInit}" 
                             reRender="idSelectTemplatePanel" />  
                             
        <apex:actionFunction name="generateDoc" 
                             action="{!doGenerateDoc}" 
                             oncomplete="afterGenerate()" 
                             reRender="idInputPanel,idTemplatePanel,idOutputPanel" 
                             timeout="{!CallTimeoutMillis}" />
        
        <apex:actionFunction name="doReturn" 
                             action="{!doReturn}" />    
        
    </apex:form>
   
</apex:page>